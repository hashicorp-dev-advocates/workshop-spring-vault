services:

  vault:
    image: hashicorp/vault:1.18.3
    restart: always
    command: [ 'vault', 'server', '-dev', '-dev-listen-address=0.0.0.0:8200']
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root-token"
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    networks:
      vpcbr:
        ipv4_address: 10.5.0.2

  database:
    build: Dockerfiles/database
    image: database
    networks:
      vpcbr:
        ipv4_address: 10.5.0.3
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "payments"

  server:
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.4
    command: server
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_TOKEN=${K3S_TOKEN:?err}
      - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
      - K3S_KUBECONFIG_MODE=666
    volumes:
      - k3s-server:/var/lib/rancher/k3s
      - ./tmp:/output
    ports:
      - 6443:6443  # Kubernetes API Server
      - 80:80      # Ingress controller port 80
      - 443:443    # Ingress controller port 443

  agent:
    image: "rancher/k3s:${K3S_VERSION:-latest}"
    networks:
      vpcbr:
        ipv4_address: 10.5.0.5
    tmpfs:
      - /run
      - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    restart: always
    environment:
      - K3S_URL=https://server:6443
      - K3S_TOKEN=${K3S_TOKEN:?err}
    volumes:
      - k3s-agent:/var/lib/rancher/k3s

volumes:
  k3s-server: {}
  k3s-agent: {}

networks:
  vpcbr:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16